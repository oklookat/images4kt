# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    branches: [ "main" ]
permissions:
  contents: read
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3

      - name: Test
        run: ./gradlew clean test
  build:
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Gradle
        run: |
          ./gradlew build
          cp build/libs/*.jar $GITHUB_WORKSPACE/
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
  createGithubRelease:
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ github.workspace }}/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Uploaded release artifact
        run: echo "Uploaded ${{ steps.create_release.outputs.upload_url }}"